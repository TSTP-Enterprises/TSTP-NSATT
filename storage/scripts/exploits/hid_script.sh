#!/bin/bash

LOG_FILE="/nsatt/storage/logs/hid_script.log"
exec 2>>$LOG_FILE

default_storage_location="/nsatt/storage"

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a $LOG_FILE
}

error_exit() {
    log "ERROR: $1"
    exit 1
}

start_time=$(date +%s)
log "Script called with arguments: $*"

unbind_gadget() {
    log "Unbinding any active USB gadget configurations..."
    for dir in /sys/kernel/config/usb_gadget/*; do
        if [ -d "$dir" ]; then
            echo "" | sudo tee "$dir/UDC" > /dev/null 2>>$LOG_FILE || log "Failed to unbind $dir from UDC"
            sync
            sleep 1  # Short delay to release
            log "Unbound gadget at $dir"
        fi
    done
}

kill_lsof_processes() {
    log "Checking for open file descriptors in usb_gadget config directory..."

    for path in /sys/kernel/config/usb_gadget/*; do
        local pids=$(sudo lsof +D "$path" 2>/dev/null | awk 'NR>1 {print $2}' | sort -u)
        if [ ! -z "$pids" ]; then
            log "Found processes using $path: $pids"
            for pid in $pids; do
                kill "$pid" || log "Failed to kill process $pid, trying forced kill"
                sleep 1
                if kill -0 "$pid" &>/dev/null; then
                    sudo kill -9 "$pid" || log "Force kill failed for $pid"
                fi
            done
        fi
    done
}

off_mode() {
    log "Switching to normal mode..."

    unbind_gadget
    kill_lsof_processes

    # Lazy unmount
    sudo umount -l /dev/sda 2>>$LOG_FILE || log "Failed to lazy unmount /dev/sda"
    sudo umount -l /dev/sdb 2>>$LOG_FILE || log "Failed to lazy unmount /dev/sdb"

    # Attempt to remove the libcomposite module with retries
    local attempts=3
    for attempt in $(seq 1 $attempts); do
        log "Attempt $attempt to remove gadgets and unload libcomposite..."
        sudo rm -rf /sys/kernel/config/usb_gadget/keyboard 2>>$LOG_FILE
        sudo rm -rf /sys/kernel/config/usb_gadget/storage 2>>$LOG_FILE
        
        if sudo modprobe -r libcomposite 2>>$LOG_FILE; then
            log "Successfully removed libcomposite on attempt $attempt"
            break
        else
            log "libcomposite still in use, retrying..."
            sync  # Flush file buffers
            sleep 1
        fi
    done

    if lsmod | grep -q libcomposite; then
        log "Failed to unload libcomposite after $attempts attempts; forcing cleanup"
        sudo rm -rf /sys/kernel/config/usb_gadget/* 2>>$LOG_FILE || log "Force remove failed on usb_gadget directory"
    fi

    log "Normal mode activated"
    return 0
}

keyboard_mode() {
    off_mode

    log "Switching to keyboard mode..."
    sudo modprobe libcomposite 2>>$LOG_FILE || error_exit "Failed to load libcomposite module"

    sudo mkdir -p /sys/kernel/config/usb_gadget/keyboard 2>>$LOG_FILE || error_exit "Failed to create keyboard directory"
    cd /sys/kernel/config/usb_gadget/keyboard || error_exit "Failed to change directory to /sys/kernel/config/usb_gadget/keyboard"

    echo 0x1d6b | sudo tee idVendor > /dev/null 2>>$LOG_FILE || error_exit "Failed to set idVendor"
    echo 0x0104 | sudo tee idProduct > /dev/null 2>>$LOG_FILE || error_exit "Failed to set idProduct"
    echo 0x0100 | sudo tee bcdDevice > /dev/null 2>>$LOG_FILE || error_exit "Failed to set bcdDevice"
    echo 0x0200 | sudo tee bcdUSB > /dev/null 2>>$LOG_FILE || error_exit "Failed to set bcdUSB"

    sudo mkdir -p strings/0x409 2>>$LOG_FILE || error_exit "Failed to create strings/0x409 directory"
    echo "1234567890" | sudo tee strings/0x409/serialnumber > /dev/null 2>>$LOG_FILE || error_exit "Failed to set serialnumber"
    echo "Raspberry Pi" | sudo tee strings/0x409/manufacturer > /dev/null 2>>$LOG_FILE || error_exit "Failed to set manufacturer"
    echo "Keyboard Gadget" | sudo tee strings/0x409/product > /dev/null 2>>$LOG_FILE || error_exit "Failed to set product"

    sudo mkdir -p configs/c.1/strings/0x409 2>>$LOG_FILE || error_exit "Failed to create configs/c.1/strings/0x409 directory"
    echo "Config 1" | sudo tee configs/c.1/strings/0x409/configuration > /dev/null 2>>$LOG_FILE || error_exit "Failed to set configuration"
    echo 120 | sudo tee configs/c.1/MaxPower > /dev/null 2>>$LOG_FILE || error_exit "Failed to set MaxPower"

    sudo mkdir -p functions/hid.usb0 2>>$LOG_FILE || error_exit "Failed to create functions/hid.usb0 directory"
    echo 1 | sudo tee functions/hid.usb0/protocol > /dev/null 2>>$LOG_FILE || error_exit "Failed to set protocol"
    echo 1 | sudo tee functions/hid.usb0/subclass > /dev/null 2>>$LOG_FILE || error_exit "Failed to set subclass"
    echo 8 | sudo tee functions/hid.usb0/report_length > /dev/null 2>>$LOG_FILE || error_exit "Failed to set report_length"
    echo -ne '\x05\x01\x09\x06\xa1\x01\x05\x07\x19\xe0\x29\xe7\x15\x00\x25\x01\x75\x01\x95\x08\x81\x02\x95\x01\x75\x08\x81\x01\x95\x05\x75\x01\x05\x08\x19\x01\x29\x05\x91\x02\x95\x01\x75\x03\x91\x01\x95\x06\x75\x08\x15\x00\x26\xff\x00\x05\x07\x19\x00\x2a\xff\x00\x81\x00\xc0' | sudo tee functions/hid.usb0/report_desc > /dev/null 2>>$LOG_FILE || error_exit "Failed to set report_desc"

    sudo ln -s functions/hid.usb0 configs/c.1/ 2>>$LOG_FILE || error_exit "Failed to link hid.usb0 to configs/c.1"
    echo "$(ls /sys/class/udc)" | sudo tee UDC > /dev/null 2>>$LOG_FILE || error_exit "Failed to set UDC"
    
    log "Keyboard mode activated"
    return 0
}

storage_mode() {
    off_mode

    log "Switching to storage mode..."
    sudo modprobe libcomposite 2>>$LOG_FILE || error_exit "Failed to load libcomposite module"

    # Determine storage location
    if [ -b "/dev/sda" ]; then
        storage_location="/dev/sda"
        log "Using storage location: /dev/sda"
    elif [ -b "/dev/sdb" ]; then
        storage_location="/dev/sdb"
        log "Using storage location: /dev/sdb"
    else
        log "No valid storage location found (sda or sdb)"
        error_exit "No valid storage location found"
    fi

    sudo mkdir -p /sys/kernel/config/usb_gadget/storage 2>>$LOG_FILE || error_exit "Failed to create storage gadget directory"
    cd /sys/kernel/config/usb_gadget/storage || error_exit "Failed to change directory to /sys/kernel/config/usb_gadget/storage"

    echo 0x1d6b | sudo tee idVendor > /dev/null || error_exit "Failed to set idVendor"
    echo 0x0104 | sudo tee idProduct > /dev/null || error_exit "Failed to set idProduct"
    echo 0x0100 | sudo tee bcdDevice > /dev/null || error_exit "Failed to set bcdDevice"
    echo 0x0200 | sudo tee bcdUSB > /dev/null || error_exit "Failed to set bcdUSB"

    sudo mkdir -p strings/0x409 || error_exit "Failed to create strings directory"
    echo "1234567890" | sudo tee strings/0x409/serialnumber > /dev/null || error_exit "Failed to set serialnumber"
    echo "Raspberry Pi" | sudo tee strings/0x409/manufacturer > /dev/null || error_exit "Failed to set manufacturer"
    echo "Storage Gadget" | sudo tee strings/0x409/product > /dev/null || error_exit "Failed to set product"

    sudo mkdir -p configs/c.1/strings/0x409 || error_exit "Failed to create config strings directory"
    echo "Config 1" | sudo tee configs/c.1/strings/0x409/configuration > /dev/null || error_exit "Failed to set configuration"
    echo 120 | sudo tee configs/c.1/MaxPower > /dev/null || error_exit "Failed to set MaxPower"

    sudo mkdir -p functions/mass_storage.usb0 || error_exit "Failed to create Mass Storage function directory"
    echo 0 | sudo tee functions/mass_storage.usb0/lun.0/cdrom > /dev/null || error_exit "Failed to set cdrom"
    echo 0 | sudo tee functions/mass_storage.usb0/lun.0/ro > /dev/null || error_exit "Failed to set ro"
    echo 0 | sudo tee functions/mass_storage.usb0/lun.0/nofua > /dev/null || error_exit "Failed to set nofua"
    echo "$storage_location" | sudo tee functions/mass_storage.usb0/lun.0/file > /dev/null || error_exit "Failed to set file for mass storage"

    sudo ln -s functions/mass_storage.usb0 configs/c.1/ || error_exit "Failed to link mass_storage.usb0 to configs/c.1"
    local udc=$(ls /sys/class/udc | head -n1)
    if [ -z "$udc" ]; then
        error_exit "No USB Device Controller found"
    fi
    echo "$udc" | sudo tee UDC > /dev/null || error_exit "Failed to bind gadget to UDC"

    log "Storage mode activated using USB drive $storage_location"
    return 0
}

case "$1" in
    "keyboard")
        keyboard_mode
        ;;
    "storage")
        storage_mode "$2"
        ;;
    "off" | "normal")
        off_mode
        ;;
    *)
        log "Usage: $0 {keyboard|storage|off|normal} [storage_location]"
        error_exit "Invalid arguments"
        ;;
esac

end_time=$(date +%s)
runtime=$((end_time - start_time))
log "Script execution completed in $runtime seconds"
